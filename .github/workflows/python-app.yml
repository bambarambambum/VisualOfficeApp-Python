# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application
env:
  DOCKER_HUB_USER: androsovm
  READER_IMAGE_NAME: reader
  READER_IMAGE_TAG: latest
  WRITER_IMAGE_NAME: writer
  WRITER_IMAGE_TAG: latest
  WEBAPP_IMAGE_NAME: webapp
  WEBAPP_IMAGE_TAG: latest

on:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

    - name: Git clone repo
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Git clone repo
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Reader image Build and push
        id: docker_build_reader
        uses: docker/build-push-action@v2
        with:
          context: ./users_reader
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/${{ env.READER_IMAGE_NAME }}:${{ env.READER_IMAGE_TAG }}

      - name: Writer image Build and push
        id: docker_build_writer
        uses: docker/build-push-action@v2
        with:
          context: ./users_writer
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/${{ env.WRITER_IMAGE_NAME }}:${{ env.WRITER_IMAGE_TAG }}

      - name: WebApp image Build and push
        id: docker_build_webapp
        uses: docker/build-push-action@v2
        with:
          context: ./webapp
          push: true
          tags: ${{ env.DOCKER_HUB_USER }}/${{ env.WEBAPP_IMAGE_NAME }}:${{ env.WEBAPP_IMAGE_TAG }}